# Copyright Contributors to the Open Cluster Management project

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "controller.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ include "controller.fullname" . }}
    chart: {{ include "controller.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ include "controller.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      labels:
        k8s-app: {{ include "controller.name" . }}
        app: {{ include "controller.name" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        chart: {{ include "controller.chart" . }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      serviceAccount: {{ template "controller.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: {{ .Values.securityContext.pod.runAsNonRoot }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.global.imageOverrides.cert_policy_controller }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        args:
        - --enable-lease=true
        - --cluster-name={{ .Values.clusterName }}
        {{- if .Values.args.frequency }}
        - --update-frequency={{ .Values.args.frequency }}
        {{- end }}
        {{- if .Values.args.defaultDuration }}
        - --default-duration={{ .Values.args.defaultDuration }}
        {{- end }}
        {{- if semverCompare "< 1.14.0" .Capabilities.KubeVersion.Version }}
        - --legacy-leader-elect=true
        {{- end }}
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - pgrep cert-policy -l
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command: ["sh", "-c", "exec echo start certificate-policy-controller"]
          initialDelaySeconds: 10
          timeoutSeconds: 2
        env:
        - name: WATCH_NAMESPACE
          value: ""
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: {{ include "controller.fullname" . }}
        {{- if .Values.global.proxyConfig.HTTP_PROXY }}
        - name: HTTP_PROXY
          value: {{ .Values.global.proxyConfig.HTTP_PROXY }}
        {{- end }}
        {{- if .Values.global.proxyConfig.HTTPS_PROXY }}
        - name: HTTPS_PROXY
          value: {{ .Values.global.proxyConfig.HTTPS_PROXY }}
        {{- end }}
        {{- if .Values.global.proxyConfig.NO_PROXY }}
        - name: NO_PROXY
          value: {{ .Values.global.proxyConfig.NO_PROXY }}
        {{- end }}
        resources:
          limits:
            memory: "300Mi"
          requests:
            memory: "150Mi"
        securityContext:
          allowPrivilegeEscalation: {{ .Values.securityContext.container.allowPrivilegeEscalation }}
          readOnlyRootFilesystem: {{ .Values.securityContext.container.readOnlyRootFilesystem }}
          runAsNonRoot: {{ .Values.securityContext.container.runAsNonRoot }}
          privileged: {{ .Values.securityContext.container.privileged }}
          capabilities:
            drop:
            - ALL
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
    {{- if .Values.global.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.imagePullSecret }}
    {{- end }}
